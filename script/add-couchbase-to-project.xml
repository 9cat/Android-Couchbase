<?xml version="1.0" encoding="UTF-8"?>
<project name="add-couchbase-to-project" default="install">

	<property file="local.properties"/>
	
	<taskdef name="showform" classname="com.couchbase.ShowForm" classpath="couchbase-form.jar"/>
	
	<condition property="is.windows">
	    <os family="windows"/>
	</condition>

	<condition property="is.unix">
		<os family="unix"/>
	</condition>

	<target name="install" depends="_get-inputs, _validate-project-path, _get-project-name, _real-install"/>
	
	<target name="install-cmdline" depends="_get-android-sdk, _get-project-path, _validate-project-path, _get-project-name, _real-install"/>	
	
	<target name="_check-android-sdk">
		<condition property="android-sdk-set">
			<isset property="sdk.dir"/>
		</condition>
	</target>
	
	<target name="_get-android-sdk" depends="_check-android-sdk" unless="sdk.dir">
		<input message="Android SDK Path" addproperty="sdk.dir"/>
	</target>
	
	<target name="_get-project-path">
		<input message="Project Path" addproperty="project.path"/>
	</target>
	
	<target name="_validate-project-path">
		
		<!-- debug only -->
		<exec executable="ls" outputproperty="ls.project.output">
		  <arg value="-al"/>
		  <arg value="${project.path}"/>
		</exec>
		<echo>Project directory contains: 
			${ls.project.output}
		</echo>
		
		<path id="debug.path">
		  <fileset dir="${project.path}">
		    <include name="**/*"/>
		  </fileset>
		</path>
		<property name="debug.path.property" refid="debug.path"/>
		<echo>Project fileset contains: 
			${debug.path.property}
		</echo>
		
		<condition property="project.path.exists.as.directory">
			<available file="${project.path}" type="dir"/>
		</condition>
		<fail message="The project path ${project.path} does not exist." unless="project.path.exists.as.directory"/>
		<condition property="project.path.looks.like.project">
			<available file="${project.path}/.project" type="file"/>
		</condition>
		<fail message="The project path ${project.path} does not contain contain a .project file." unless="project.path.looks.like.project"/>	
	</target>
	
	<!-- read the .project file to deterimine the project name -->
	<target name="_get-project-name">
		<xmlproperty file="${project.path}/.project"/>
	</target>
	
	<target name="_guess-android-sdk-dir">
		<exec executable="bash" outputproperty="sdk.dir.guess.full" failifexecutionfails="false" failonerror="false">
		  <arg value="-l"/>
		  <arg value="-c"/>
		  <arg value="type -P android"/>
		</exec>
		<property name="sdk.dir.guess" location="${sdk.dir.guess.full}/../.."/>
		<echo>Guessing Android Dir: ${sdk.dir.guess}</echo>
	</target>
	
	<target name="_get-inputs">
		
		<showform/>
		<echo>Android SDK is ${sdk.dir}</echo>
		<echo>Project Path is ${project.path}</echo>
	
	</target>
	
	<target name="do-windows" if="is.windows">
		<echo>Copying ${user.dir}/couchbase-build.xml to ${project.path}/couchbase-build.xml</echo>
		<copy file="couchbase-build.xml" tofile="${project.path}/couchbase-build.xml"  overwrite="true"></copy>
	</target>

	<target name="do-unix" if="is.unix">
		<echo>Symlinking ${project.path}/couchbase-build.xml to ${user.dir}/couchbase-build.xml</echo>
		<symlink link="${project.path}/couchbase-build.xml" resource="${user.dir}/couchbase-build.xml" overwrite="true" />
	</target>

	<target name="_real-install" depends="_get-android-sdk, _get-project-path, _get-project-name, do-windows, do-unix">
		
		<echo>Android SDK: ${sdk.dir}</echo>
		<echo>Project Path: ${project.path}</echo>
		<echo>Project Name: ${projectDescription.name}</echo>
		
		<property name="android.couchbase.dir" location=".."/>
		
		<!-- copy build.properties replacing values in template -->
		<copy file="build.properties.template" tofile="${project.path}/build.properties">
			<filterset>
				<filter token="SDK.DIR" value="${sdk.dir}"/>
				<filter token="ANDROID.COUCHBASE.DIR" value="${android.couchbase.dir}"/>
			</filterset>
		</copy>
		
		<!-- make external tool builders dir -->
		<mkdir dir="${project.path}/.externalToolBuilders/"/>
		
		<!-- copy builder launch configuration replacing values in template -->
		<copy file="CouchbaseBuilder.launch.template" tofile="${project.path}/.externalToolBuilders/CouchbaseBuilder.launch">
			<filterset>
				<filter token="PROJECT.NAME" value="${projectDescription.name}"/>
			</filterset>
		</copy>		
		
		<!-- backup the .project file -->
		<copy file="${project.path}/.project" tofile="${project.path}/.project.orig"/>
		
		<!-- update the .project file to reference Couchbase builder -->
		<xslt style="project.xsl" in="${project.path}/.project.orig" out="${project.path}/.project"></xslt>
		
		<!-- invoke ant on couchbase-build.xml in the new project -->
		<ant antfile="${project.path}/couchbase-build.xml" target="all" dir="${project.path}"/>
		
	</target>

</project>